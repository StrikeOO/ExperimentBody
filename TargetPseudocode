CPP FILE:

// STATE_TARGET: present the target
	//              go to the next state and wait for subject response
	//THINGS TO CHANGE: we need two targets.  we need a variable for target orientation.  we need an occluder of different sizes
	//to put in front of the image.  we need two options for the location of each bar.  we need to keep track of where it is.
	case STATE_TARGET:
	
			
			//CEnvironment::Instance()->outputMessage("State Target");
			// continue to stabilize the fixation marker;
		
			//question
			
			
			m_fixation->pxSetPosition(X,Y);
			m_fixation->show();
			
	Changed	---->	TARGET_LEFT_ORIENTATION -> GETORENTATION();//INT
			TARGET_RIGHT_ORIENTATION -> GETORENTATION();//INT
			TARGET_SIZE -> GETTARGETSIZE();//INT, PERCENTAGE
			
			
			if (debug==1)
			{
				X = 0;
				Y = 0;
			}

			if (m_timerisi.isExpired() && (gate==0))
			{
			
		   	SHOW_TARGET = 1;
			//m_target->pxSetPosition(X+XTargetOffset, Y);//LEFT AND RIGHT
		---->	M_LEFTtarget->pxSetPosition(Position,position)
			M_RIGTHtarget->pxSetPosition(Position,Position)
			M_Lefttarget -> SET LEFT TARGET ORIENTATION
			M_Righttarget -> SET RIGHT TARGET ORITATION
			
			
			
		---->	M_Lefttarget->show();
			M_RightTarget->show();
			
			
			TimeTargetON = m_timerExp.getTime();
			// set target duration
			m_timertarget.start(m_paramsFile->getInteger(CFG_TARGET_TIME));
			//NEED TO LOOK AT TARGET THE ENTIRE TIME SO GATE = 0? WHAT DOES GATE MEAN?
				gate = 1;
        		}
			
			
			
			if ((gate==1) && (m_timertarget.isExpired()))
			{ // go to the next state
			
			m_state = STATE_RESPONSE;
		---->	m_target->hide();//2 target should be hided
			
			
			//CEnvironment::Instance()->outputMessage("State Response");
			m_timerhold.start(m_paramsFile->getInteger(CFG_HOLD_TIME));
			WAIT_RESPONSE = 0;
			TimeTargetOFF = m_timerExp.getTime();
			
			}
			
			
			//If timer isn't expired, continue to show the target
			else if ((gate==1) && (!m_timertarget.isExpired()))
			{
			m_fixation->pxSetPosition(X,Y);
			m_fixation->show();			
			m_target->pxSetPosition(X+XTargetOffset, Y);//also should be 2 targets
			m_target->show();
			}

	
	break;
